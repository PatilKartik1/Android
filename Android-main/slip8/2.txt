AndroidManifest.xml

<uses-permission android:name="android.permission.INTERNET"/>
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>


activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    android:padding="20dp">

    <Button
        android:id="@+id/btnDownload"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Download File" />

    <TextView
        android:id="@+id/txtStatus"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Status: Waiting..."
        android:textSize="18sp"
        android:layout_marginTop="20dp"/>
</LinearLayout>


DownloadService.java

package com.example.downloadservice;

import android.app.IntentService;
import android.content.Intent;
import android.net.Uri;
import android.os.Environment;
import android.util.Log;
import androidx.localbroadcastmanager.content.LocalBroadcastManager;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;

public class DownloadService extends IntentService {

    public static final String DOWNLOAD_COMPLETE = "com.example.downloadservice.DOWNLOAD_COMPLETE";

    public DownloadService() {
        super("DownloadService");
    }

    @Override
    protected void onHandleIntent(Intent intent) {
        String fileUrl = intent.getStringExtra("file_url");
        String fileName = "downloaded_file.pdf";  // Set your file name

        try {
            URL url = new URL(fileUrl);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.connect();

            if (connection.getResponseCode() != HttpURLConnection.HTTP_OK) {
                Log.e("DownloadService", "Server returned HTTP " + connection.getResponseCode());
                return;
            }

            InputStream input = connection.getInputStream();
            File file = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS), fileName);
            FileOutputStream output = new FileOutputStream(file);

            byte[] data = new byte[4096];
            int count;
            while ((count = input.read(data)) != -1) {
                output.write(data, 0, count);
            }

            output.close();
            input.close();

            // Notify MainActivity via Broadcast
            Intent broadcastIntent = new Intent(DOWNLOAD_COMPLETE);
            LocalBroadcastManager.getInstance(this).sendBroadcast(broadcastIntent);

        } catch (Exception e) {
            Log.e("DownloadService", "Error: " + e.getMessage());
        }
    }
}

AndroidManifest.xml

<service android:name=".DownloadService"/>

MainActivity.java

package com.example.downloadservice;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
import androidx.localbroadcastmanager.content.LocalBroadcastManager;

public class MainActivity extends AppCompatActivity {

    Button btnDownload;
    TextView txtStatus;

    private BroadcastReceiver downloadReceiver = new BroadcastReceiver() {
        @Override
        public void onReceive(Context context, Intent intent) {
            txtStatus.setText("Status: Download Complete!");
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        btnDownload = findViewById(R.id.btnDownload);
        txtStatus = findViewById(R.id.txtStatus);

        btnDownload.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtStatus.setText("Status: Downloading...");

                Intent intent = new Intent(MainActivity.this, DownloadService.class);
                intent.putExtra("file_url", "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf");
                startService(intent);
            }
        });

        // Register BroadcastReceiver
        LocalBroadcastManager.getInstance(this).registerReceiver(downloadReceiver,
                new IntentFilter(DownloadService.DOWNLOAD_COMPLETE));
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        LocalBroadcastManager.getInstance(this).unregisterReceiver(downloadReceiver);
    }
}
