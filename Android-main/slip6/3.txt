build.gradle (Module: app)

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
}


DatabaseHelper.java

package com.example.studentapp;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class DatabaseHelper extends SQLiteOpenHelper {

    private static final String DATABASE_NAME = "StudentDB";
    private static final int DATABASE_VERSION = 1;
    private static final String TABLE_NAME = "Student";
    private static final String COLUMN_ID = "Sid";
    private static final String COLUMN_NAME = "Sname";
    private static final String COLUMN_PHONE = "phno";

    public DatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        String createTable = "CREATE TABLE " + TABLE_NAME + " (" +
                COLUMN_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                COLUMN_NAME + " TEXT, " +
                COLUMN_PHONE + " TEXT)";
        db.execSQL(createTable);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
        onCreate(db);
    }

    // Insert Student
    public boolean addStudent(String name, String phone) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues values = new ContentValues();
        values.put(COLUMN_NAME, name);
        values.put(COLUMN_PHONE, phone);
        long result = db.insert(TABLE_NAME, null, values);
        db.close();
        return result != -1;
    }

    // Delete Student
    public boolean deleteStudent(int id) {
        SQLiteDatabase db = this.getWritableDatabase();
        int result = db.delete(TABLE_NAME, COLUMN_ID + "=?", new String[]{String.valueOf(id)});
        db.close();
        return result > 0;
    }

    // Get All Students
    public Cursor getAllStudents() {
        SQLiteDatabase db = this.getReadableDatabase();
        return db.rawQuery("SELECT * FROM " + TABLE_NAME, null);
    }
}


activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="20dp">

    <EditText
        android:id="@+id/etName"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Student Name"/>

    <EditText
        android:id="@+id/etPhone"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Phone Number"
        android:inputType="phone"/>

    <Button
        android:id="@+id/btnAdd"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Add Student"/>

    <EditText
        android:id="@+id/etDeleteId"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Student ID to Delete"/>

    <Button
        android:id="@+id/btnDelete"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Delete Student"/>

    <TextView
        android:id="@+id/tvStudents"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textSize="16sp"
        android:text="Students List:"/>
</LinearLayout>

MainActivity.java

package com.example.studentapp;

import android.database.Cursor;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    DatabaseHelper db;
    EditText etName, etPhone, etDeleteId;
    TextView tvStudents;
    Button btnAdd, btnDelete;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        db = new DatabaseHelper(this);
        etName = findViewById(R.id.etName);
        etPhone = findViewById(R.id.etPhone);
        etDeleteId = findViewById(R.id.etDeleteId);
        tvStudents = findViewById(R.id.tvStudents);
        btnAdd = findViewById(R.id.btnAdd);
        btnDelete = findViewById(R.id.btnDelete);

        displayStudents();

        btnAdd.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String name = etName.getText().toString();
                String phone = etPhone.getText().toString();

                if (name.isEmpty() || phone.isEmpty()) {
                    Toast.makeText(MainActivity.this, "Please enter all fields", Toast.LENGTH_SHORT).show();
                } else {
                    boolean isInserted = db.addStudent(name, phone);
                    if (isInserted) {
                        Toast.makeText(MainActivity.this, "Student Added", Toast.LENGTH_SHORT).show();
                        etName.setText("");
                        etPhone.setText("");
                        displayStudents();
                    } else {
                        Toast.makeText(MainActivity.this, "Error Adding Student", Toast.LENGTH_SHORT).show();
                    }
                }
            }
        });

        btnDelete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String idText = etDeleteId.getText().toString();
                if (idText.isEmpty()) {
                    Toast.makeText(MainActivity.this, "Enter Student ID to delete", Toast.LENGTH_SHORT).show();
                } else {
                    int id = Integer.parseInt(idText);
                    boolean isDeleted = db.deleteStudent(id);
                    if (isDeleted) {
                        Toast.makeText(MainActivity.this, "Student Deleted", Toast.LENGTH_SHORT).show();
                        etDeleteId.setText("");
                        displayStudents();
                    } else {
                        Toast.makeText(MainActivity.this, "Student Not Found", Toast.LENGTH_SHORT).show();
                    }
                }
            }
        });
    }

    private void displayStudents() {
        Cursor cursor = db.getAllStudents();
        StringBuilder builder = new StringBuilder("Students List:\n");

        if (cursor.getCount() == 0) {
            builder.append("No Students Found");
        } else {
            while (cursor.moveToNext()) {
                builder.append("ID: ").append(cursor.getInt(0)).append("\n");
                builder.append("Name: ").append(cursor.getString(1)).append("\n");
                builder.append("Phone: ").append(cursor.getString(2)).append("\n\n");
            }
        }

        tvStudents.setText(builder.toString());
        cursor.close();
    }
}


